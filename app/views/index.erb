<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <title>jQuery UI: Draggable - jsFiddle demo</title>


  <script type='text/javascript' src='http://code.jquery.com/jquery-1.7.1.js'></script>

  <link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">


  <script type="text/javascript" src="jquery.line.js"></script>
  <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/jquery-ui.js"></script>


  <link rel="stylesheet" type="text/css" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.18/themes/overcast/jquery-ui.css">



<script type='text/javascript'>//<![CDATA[
$(function(){
  $(function() {
    $( ".sortable_job" ).sortable({
      revert: true,
      connectWith: ".sortable_job",
      placeholder: "sortable_job_moving",




      start: function(e, ui){
        ui.placeholder.height(ui.helper[0].scrollHeight);
        update_item('#DDDDDD');

      },
      change: function (e, ui){
        update_item('#DDDDDD');
      },
      stop: function (e, ui){
        update_item();
      },



    });
    $( "ul, li" ).disableSelection();
  });

  $(function() {
    $( ".sortable_sequence" ).sortable({
      revert: true,
      placeholder: "sortable_sequence_moving",

      start: function(e, ui){
        ui.placeholder.height(ui.helper[0].scrollHeight);
        update_item('#DDDDDD');
      },
      change: function (e, ui){
        update_item('#DDDDDD');
      },
      stop: function (e, ui){
        update_item();
      },
    });
    $( "ul, li" ).disableSelection();
  });




});//]]>





function getOffset( el ) {
    var rect = el.getBoundingClientRect();
    return {
        left: rect.left + window.pageXOffset,
        top: rect.top + window.pageYOffset,
        width: rect.width || el.offsetWidth,
        height: rect.height || el.offsetHeight
    };
}

function connect(div1, div2, color, thickness) { // draw a line connecting elements
    var off1 = getOffset(div1);
    var off2 = getOffset(div2);
    // bottom right
    var x1 = off1.left + off1.width;
    var y1 = off1.top + (off1.height / 2);

    // top right
    var x2 = off2.left;
    var y2 = off2.top + (off2.height / 2);

    // distance
    var length = Math.sqrt(((x2-x1) * (x2-x1)) + ((y2-y1) * (y2-y1)));
    // center
    var cx = ((x1 + x2) / 2) - (length / 2);
    var cy = ((y1 + y2) / 2) - (thickness / 2);
    // angle
    var angle = Math.atan2((y1-y2),(x1-x2))*(180/Math.PI);
    // make hr

    $('.container').line(x1, y1, x2, y2, {color:color, zindex:1, class:'line', style:'dotted'});

    //var htmlLine = "<div style='padding:0px; margin:0px; height:" + thickness + "px; background-color:" + color + "; line-height:1px; position:absolute; left:" + cx + "px; top:" + cy + "px; width:" + length + "px; -moz-transform:rotate(" + angle + "deg); -webkit-transform:rotate(" + angle + "deg); -o-transform:rotate(" + angle + "deg); -ms-transform:rotate(" + angle + "deg); transform:rotate(" + angle + "deg);' />";
    //
    // alert(htmlLine);
    //document.body.innerHTML += htmlLine;
}

</script>


<style>

.sortable_job {
  padding: 10px;
  border-radius: 5px;
  overflow:visible;

}

.sortable_job > li {
  list-style: none;
  margin-bottom: 10px;
  border-radius: 5px;


}

.sortable_sequence {
  padding: 10px;
  border-radius: 5px;

  overflow:visible;
}

.sortable_sequence > li {
  list-style: none;
  margin-bottom: 10px;
  border-radius: 5px;


}

.item {
  padding:20px;
}

.ui-sortable-helper:hover {
  cursor:pointer;

}

.column {
  display: inline-block;

  width: 210px;
  padding: 5px;
  margin-right: 60px;
  background: #EEEEEE;
  border-radius: 5px;
  vertical-align: top;
}

.column-max {
  width: 100%;
  float: left;
  margin-right: 60px;

}

.sortable_orphaned {
  background: #EEEEEE;
  padding: 10px;
  border-radius: 5px;

  overflow:visible;
  float: left;
}

.sortable_orphaned > li {
  float: left;
  width: 160px;
  margin: 5px;
}


.sortable_job_moving {
  background-color: #EAEAEA;
  width: inherited;
  border-radius: 5px;

  width: 100%;
  overflow: auto;
  border: 1px dotted black;

}


.sortable_sequence_moving{
  background-color: #EAEAEA;
  width: inherited;
  border-radius: 5px;

  width: 100%;
  overflow: auto;
  border: 1px dotted black;


}


.flow {
  background: #F4F4F4;
  overflow:auto;
  border-radius: 5px;

  padding: 10px;
  margin-top: 5px;
  float: left;
  width: 100%;
}

.sequence {
  list-style: none;
  background: #DDDDDD;
  border-radius: 5px;

  width: 100%;
  white-space: nowrap;

}

.ui-sortable-helper {

  margin-bottom:10px;
}

.flow {
  overflow-x:auto;
  white-space: nowrap;

}

.item {
  width: 170px;
  white-space: normal;
  display:flex;

}

.navbar {
  border-radius: 0px;

}

</style>

</head>


<body>

  <nav class="navbar navbar-inverse">
    <div class="container-fluid">
      <div class="navbar-header">
        <a class="navbar-brand" href="#">Project name</a>
      </div>

    </div>
  </nav>





<div class="container">
  <div class="page" id="page">
    <ul class="list-unstyled sortable_flow " id="flows">

    </ul>
  </div>
</div>


<div class="container">
  <div class="column-max">
    <h4>Available Tasks</h4>
    <ul class="list-unstyled sortable_job sortable_orphaned">
      <li class="ui-state-default" ><div class="item">Item #1</div></li>
      <li class="ui-state-default" ><div class="item">Item #2</div></li>
      <li class="ui-state-default" ><div class="item">Item #3</div></li>
      <li class="ui-state-default" ><div class="item">Item #4</div></li>
      <li class="ui-state-default" ><div class="item">Item #5</div></li>
      <li class="ui-state-default" ><div class="item">Item #6</div></li>
      <li class="ui-state-default" ><div class="item">Item #7</div></li>
      <li class="ui-state-default" ><div class="item">Item #8</div></li>
      <li class="ui-state-default" ><div class="item">Item #9</div></li>
      <li class="ui-state-default" ><div class="item">Item #10</div></li>
      <li class="ui-state-default" ><div class="item">Item #11</div></li>
      <li class="ui-state-default" ><div class="item">Item #12</div></li>
      <li class="ui-state-default" ><div class="item">Item #13</div></li>
      <li class="ui-state-default" ><div class="item">Item #14</div></li>
    </ul>
  </div>
</div>




<script>


function update_item(color) {
  color = typeof color !== 'undefined' ? color : '#AAAAAA';

  $( ".line" ).remove();

  for(var i in stages_link) {
    for(var i2 in stages_link[i]) {
      if(typeof stages_link[i][(parseInt(i2) + 1)] !== 'undefined') {
        for(var i3 in stages_link[i][i2]) {
          for(var i4 in stages_link[i][(parseInt(i2) + 1)]) {
            connect(document.getElementById('sequence' + stages_link[i][i2][i3]), document.getElementById('sequence' + stages_link[i][(parseInt(i2) + 1)][i4]), color, 3);
          }
        }
      }
    }
  }
}



window.onresize = function() {
  update_item();

};


data = {"flows":[{"id":1,"title":"Example #1","order":0,"created_at":"2015-09-26T10:51:43.518Z","updated_at":"2015-09-26T10:51:43.518Z"},{"id":2,"title":"Orphaned","order":1,"created_at":"2015-09-26T10:51:43.526Z","updated_at":"2015-09-26T10:51:43.526Z"}],"stages":[{"id":1,"title":"Example #1","order":0,"flow_id":1,"created_at":"2015-09-26T10:51:43.534Z","updated_at":"2015-09-26T10:51:43.534Z"},{"id":2,"title":"Example #1","order":1,"flow_id":1,"created_at":"2015-09-26T10:51:43.540Z","updated_at":"2015-09-26T10:51:43.540Z"},{"id":3,"title":"Example #1","order":2,"flow_id":1,"created_at":"2015-09-26T10:51:43.545Z","updated_at":"2015-09-26T10:51:43.545Z"}],"sequences":[{"id":1,"title":"Step 1a","order":0,"stage_id":1,"created_at":"2015-09-26T10:51:43.554Z","updated_at":"2015-09-26T10:51:43.554Z"},{"id":2,"title":"Step 1b","order":1,"stage_id":1,"created_at":"2015-09-26T10:51:43.560Z","updated_at":"2015-09-26T10:51:43.560Z"},{"id":3,"title":"Step 1c","order":2,"stage_id":1,"created_at":"2015-09-26T10:51:43.564Z","updated_at":"2015-09-26T10:51:43.564Z"},{"id":4,"title":"Step 2","order":0,"stage_id":2,"created_at":"2015-09-26T10:51:43.569Z","updated_at":"2015-09-26T10:51:43.569Z"},{"id":5,"title":"Step 3","order":0,"stage_id":3,"created_at":"2015-09-26T10:51:43.574Z","updated_at":"2015-09-26T10:51:43.574Z"}],"jobs":[{"id":1,"title":"Unit Test #1","sequence_id":1,"order":0,"created_at":"2015-09-26T10:51:43.586Z","updated_at":"2015-09-26T10:51:43.586Z"},{"id":2,"title":"Unit Test #2","sequence_id":2,"order":0,"created_at":"2015-09-26T10:51:43.592Z","updated_at":"2015-09-26T10:51:43.592Z"},{"id":3,"title":"Unit Test #3","sequence_id":3,"order":0,"created_at":"2015-09-26T10:51:43.596Z","updated_at":"2015-09-26T10:51:43.596Z"},{"id":4,"title":"Build Artifact","sequence_id":4,"order":0,"created_at":"2015-09-26T10:51:43.601Z","updated_at":"2015-09-26T10:51:43.601Z"},{"id":5,"title":"Deploy Artifact","sequence_id":4,"order":1,"created_at":"2015-09-26T10:51:43.606Z","updated_at":"2015-09-26T10:51:43.606Z"},{"id":6,"title":"Push Changes","sequence_id":4,"order":2,"created_at":"2015-09-26T10:51:43.610Z","updated_at":"2015-09-26T10:51:43.610Z"},{"id":7,"title":"Run Acceptance Tests","sequence_id":5,"order":0,"created_at":"2015-09-26T10:51:43.614Z","updated_at":"2015-09-26T10:51:43.614Z"},{"id":8,"title":"Orphaned Job #1","sequence_id":0,"order":0,"created_at":"2015-09-26T10:51:43.620Z","updated_at":"2015-09-26T10:51:43.620Z"},{"id":9,"title":"Orphaned Job #2","sequence_id":0,"order":1,"created_at":"2015-09-26T10:51:43.625Z","updated_at":"2015-09-26T10:51:43.625Z"},{"id":10,"title":"Orphaned Job #3","sequence_id":0,"order":2,"created_at":"2015-09-26T10:51:43.629Z","updated_at":"2015-09-26T10:51:43.629Z"},{"id":11,"title":"Orphaned Job #4","sequence_id":0,"order":3,"created_at":"2015-09-26T10:51:43.633Z","updated_at":"2015-09-26T10:51:43.633Z"},{"id":12,"title":"Orphaned Job #5","sequence_id":0,"order":4,"created_at":"2015-09-26T10:51:43.638Z","updated_at":"2015-09-26T10:51:43.638Z"},{"id":13,"title":"Orphaned Job #6","sequence_id":0,"order":5,"created_at":"2015-09-26T10:51:43.643Z","updated_at":"2015-09-26T10:51:43.643Z"},{"id":14,"title":"Orphaned Job #6","sequence_id":0,"order":6,"created_at":"2015-09-26T10:51:43.647Z","updated_at":"2015-09-26T10:51:43.647Z"},{"id":15,"title":"Orphaned Job #7","sequence_id":0,"order":7,"created_at":"2015-09-26T10:51:43.651Z","updated_at":"2015-09-26T10:51:43.651Z"},{"id":16,"title":"Orphaned Job #8","sequence_id":0,"order":8,"created_at":"2015-09-26T10:51:43.656Z","updated_at":"2015-09-26T10:51:43.656Z"}]};
console.log(data);


stages_link = {};

function update_workflows() {

  stages_link = {};

  for(var flow in data.flows) {
    if( $('#flow' + data.flows[flow].id).length ) {
      console.log('check position using .index();');
    } else {
      $( "#flows" ).append( '<li class="flow" id="flow' + data.flows[flow].id + '"></li>' );
      console.log('does not exists');
    }

    stages_link[data.flows[flow].id] = {};

  }

  stages = {};
  for(var stage in data.stages) {
    $( "#flow" + data.stages[stage].flow_id ).append( '<ul class="list-unstyled sortable_sequence column" id="stage' + data.stages[stage].id + '"></ul>' );
    stages_link[data.stages[stage].flow_id][data.stages[stage].id] = [];
    stages[data.stages[stage].id] = data.stages[stage].flow_id;
  }

  for(var sequence in data.sequences) {
    $( "#stage" + data.sequences[sequence].stage_id ).append( '<li class="ui-state-default sequence"><center><h4>' + data.sequences[sequence].title + '</h4></center><ul id="sequence' + data.sequences[sequence].id + '" class="list-unstyled sortable_job"></ul></li>' );
    stages_link[stages[data.sequences[sequence].stage_id]][data.sequences[sequence].stage_id].push(data.sequences[sequence].id);

  }

  for(var job in data.jobs) {
    $( "#sequence" + data.jobs[job].sequence_id ).append( '<li class="ui-state-default" id="job' + data.jobs[job].id + '"><div class="item">' + data.jobs[job].title + '</div></li>' );
  }

  $( ".flow" ).scroll(function() {
    update_item();
  });
}

update_workflows();
update_item();

console.log();
console.log('all ok');
</script>

</body>

</html>
